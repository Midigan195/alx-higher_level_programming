>>> pascal_triangle = __import__('12-pascal_triangle').pascal_triangle
>>> def print_triangle(triangle):
...     """
...     Print the triangle
...     """
...     for row in triangle:
...         print("[{}]".format(",".join([str(x) for x in row])))
...
>>> print_triangle(pascal_triangle(5))
[1]
[1,1]
[1,2,1]
[1,3,3,1]
[1,4,6,4,1]
>>> print_triangle(pascal_triangle(0))
>>> print_triangle(pascal_triangle(-2))
>>> print_triangle(pascal_triangle(1))
[1]
>>> print_triangle(pascal_triangle(2))
[1]
[1,1]
>>> print_triangle(pascal_triangle(10))
[1]
[1,1]
[1,2,1]
[1,3,3,1]
[1,4,6,4,1]
[1,5,10,10,5,1]
[1,6,15,20,15,6,1]
[1,7,21,35,35,21,7,1]
[1,8,28,56,70,56,28,8,1]
[1,9,36,84,126,126,84,36,9,1]
>>> print_triangle(pascal_triangle(None))
Traceback (most recent call last):
TypeError: '<=' not supported between instances of 'NoneType' and 'int'
>>> print_triangle(pascal_triangle(1.3))
Traceback (most recent call last):
TypeError: 'float' object cannot be interpreted as an integer
